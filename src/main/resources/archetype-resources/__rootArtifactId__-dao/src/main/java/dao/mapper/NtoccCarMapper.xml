#set( $symbol_pound = '#' )
        #set( $symbol_dollar = '$' )
        #set( $symbol_escape = '\' )
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${package}.dao.mapper.NtoccCarMapper">
  <resultMap id="BaseResultMap" type="${package}.dao.entity.NtoccCar">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="car_id" jdbcType="VARCHAR" property="carId" />
    <result column="orgroot" jdbcType="CHAR" property="orgroot" />
    <result column="orgcode" jdbcType="VARCHAR" property="orgcode" />
    <result column="license_number" jdbcType="VARCHAR" property="licenseNumber" />
    <result column="car_model" jdbcType="VARCHAR" property="carModel" />
    <result column="vehicle_length" jdbcType="VARCHAR" property="vehicleLength" />
    <result column="car_load" jdbcType="DECIMAL" property="carLoad" />
    <result column="road_transport_certificate" jdbcType="VARCHAR" property="roadTransportCertificate" />
    <result column="road_transport_certificate_expire" jdbcType="DATE" property="roadTransportCertificateExpire" />
    <result column="license_plate_color" jdbcType="VARCHAR" property="licensePlateColor" />
    <result column="car_owner" jdbcType="VARCHAR" property="carOwner" />
    <result column="check_status" jdbcType="TINYINT" property="checkStatus" />
    <result column="driver_license_expire" jdbcType="DATE" property="driverLicenseExpire" />
    <result column="in_net" jdbcType="TINYINT" property="inNet" />
    <result column="mot_status" jdbcType="TINYINT" property="motStatus" />
    <result column="mot_etc_record" jdbcType="TINYINT" property="motEtcRecord" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gmt_create, gmt_modified, car_id, orgroot, orgcode, license_number, car_model, 
    vehicle_length, car_load, road_transport_certificate, road_transport_certificate_expire, 
    license_plate_color, car_owner, check_status, driver_license_expire, in_net, mot_status, 
    mot_etc_record
  </sql>
  <select id="selectByExample" parameterType="${package}.dao.entity.NtoccCarExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ntocc_car
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    'true' as QUERYID,
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, gmt_create, gmt_modified, car_id, orgroot, orgcode, license_number, car_model, 
          vehicle_length, car_load, road_transport_certificate, road_transport_certificate_expire, 
          license_plate_color, car_owner, check_status, driver_license_expire, in_net, mot_status, 
          mot_etc_record
      </otherwise>
    </choose>
    from ntocc_car
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example.rows != null">
      <if test="example.offset != null">
        limit ${example.offset}, ${example.rows}
      </if>
      <if test="example.offset == null">
        limit ${example.rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ntocc_car
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, gmt_create, gmt_modified, car_id, orgroot, orgcode, license_number, car_model, 
          vehicle_length, car_load, road_transport_certificate, road_transport_certificate_expire, 
          license_plate_color, car_owner, check_status, driver_license_expire, in_net, mot_status, 
          mot_etc_record
      </otherwise>
    </choose>
    from ntocc_car
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ntocc_car
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="${package}.dao.entity.NtoccCarExample">
    delete from ntocc_car
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="${package}.dao.entity.NtoccCar">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ntocc_car (gmt_create, gmt_modified, car_id, 
      orgroot, orgcode, license_number, 
      car_model, vehicle_length, car_load, 
      road_transport_certificate, road_transport_certificate_expire, 
      license_plate_color, car_owner, check_status, 
      driver_license_expire, in_net, mot_status, 
      mot_etc_record)
    values (#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{carId,jdbcType=VARCHAR}, 
      #{orgroot,jdbcType=CHAR}, #{orgcode,jdbcType=VARCHAR}, #{licenseNumber,jdbcType=VARCHAR}, 
      #{carModel,jdbcType=VARCHAR}, #{vehicleLength,jdbcType=VARCHAR}, #{carLoad,jdbcType=DECIMAL}, 
      #{roadTransportCertificate,jdbcType=VARCHAR}, #{roadTransportCertificateExpire,jdbcType=DATE}, 
      #{licensePlateColor,jdbcType=VARCHAR}, #{carOwner,jdbcType=VARCHAR}, #{checkStatus,jdbcType=TINYINT}, 
      #{driverLicenseExpire,jdbcType=DATE}, #{inNet,jdbcType=TINYINT}, #{motStatus,jdbcType=TINYINT}, 
      #{motEtcRecord,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="map">
    <selectKey keyProperty="record.id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ntocc_car
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.gmtCreate != null">
            gmt_create,
          </if>
          <if test="record.gmtModified != null">
            gmt_modified,
          </if>
          <if test="record.carId != null">
            car_id,
          </if>
          <if test="record.orgroot != null">
            orgroot,
          </if>
          <if test="record.orgcode != null">
            orgcode,
          </if>
          <if test="record.licenseNumber != null">
            license_number,
          </if>
          <if test="record.carModel != null">
            car_model,
          </if>
          <if test="record.vehicleLength != null">
            vehicle_length,
          </if>
          <if test="record.carLoad != null">
            car_load,
          </if>
          <if test="record.roadTransportCertificate != null">
            road_transport_certificate,
          </if>
          <if test="record.roadTransportCertificateExpire != null">
            road_transport_certificate_expire,
          </if>
          <if test="record.licensePlateColor != null">
            license_plate_color,
          </if>
          <if test="record.carOwner != null">
            car_owner,
          </if>
          <if test="record.checkStatus != null">
            check_status,
          </if>
          <if test="record.driverLicenseExpire != null">
            driver_license_expire,
          </if>
          <if test="record.inNet != null">
            in_net,
          </if>
          <if test="record.motStatus != null">
            mot_status,
          </if>
          <if test="record.motEtcRecord != null">
            mot_etc_record,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.gmtCreate != null">
            #{record.gmtCreate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
          <if test="record.carId != null">
            #{record.carId,jdbcType=VARCHAR},
          </if>
          <if test="record.orgroot != null">
            #{record.orgroot,jdbcType=CHAR},
          </if>
          <if test="record.orgcode != null">
            #{record.orgcode,jdbcType=VARCHAR},
          </if>
          <if test="record.licenseNumber != null">
            #{record.licenseNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.carModel != null">
            #{record.carModel,jdbcType=VARCHAR},
          </if>
          <if test="record.vehicleLength != null">
            #{record.vehicleLength,jdbcType=VARCHAR},
          </if>
          <if test="record.carLoad != null">
            #{record.carLoad,jdbcType=DECIMAL},
          </if>
          <if test="record.roadTransportCertificate != null">
            #{record.roadTransportCertificate,jdbcType=VARCHAR},
          </if>
          <if test="record.roadTransportCertificateExpire != null">
            #{record.roadTransportCertificateExpire,jdbcType=DATE},
          </if>
          <if test="record.licensePlateColor != null">
            #{record.licensePlateColor,jdbcType=VARCHAR},
          </if>
          <if test="record.carOwner != null">
            #{record.carOwner,jdbcType=VARCHAR},
          </if>
          <if test="record.checkStatus != null">
            #{record.checkStatus,jdbcType=TINYINT},
          </if>
          <if test="record.driverLicenseExpire != null">
            #{record.driverLicenseExpire,jdbcType=DATE},
          </if>
          <if test="record.inNet != null">
            #{record.inNet,jdbcType=TINYINT},
          </if>
          <if test="record.motStatus != null">
            #{record.motStatus,jdbcType=TINYINT},
          </if>
          <if test="record.motEtcRecord != null">
            #{record.motEtcRecord,jdbcType=TINYINT},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="${package}.dao.entity.NtoccCarExample" resultType="java.lang.Long">
    select count(*) from ntocc_car
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ntocc_car
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.gmtCreate != null">
            gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
          <if test="record.carId != null">
            car_id = #{record.carId,jdbcType=VARCHAR},
          </if>
          <if test="record.orgroot != null">
            orgroot = #{record.orgroot,jdbcType=CHAR},
          </if>
          <if test="record.orgcode != null">
            orgcode = #{record.orgcode,jdbcType=VARCHAR},
          </if>
          <if test="record.licenseNumber != null">
            license_number = #{record.licenseNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.carModel != null">
            car_model = #{record.carModel,jdbcType=VARCHAR},
          </if>
          <if test="record.vehicleLength != null">
            vehicle_length = #{record.vehicleLength,jdbcType=VARCHAR},
          </if>
          <if test="record.carLoad != null">
            car_load = #{record.carLoad,jdbcType=DECIMAL},
          </if>
          <if test="record.roadTransportCertificate != null">
            road_transport_certificate = #{record.roadTransportCertificate,jdbcType=VARCHAR},
          </if>
          <if test="record.roadTransportCertificateExpire != null">
            road_transport_certificate_expire = #{record.roadTransportCertificateExpire,jdbcType=DATE},
          </if>
          <if test="record.licensePlateColor != null">
            license_plate_color = #{record.licensePlateColor,jdbcType=VARCHAR},
          </if>
          <if test="record.carOwner != null">
            car_owner = #{record.carOwner,jdbcType=VARCHAR},
          </if>
          <if test="record.checkStatus != null">
            check_status = #{record.checkStatus,jdbcType=TINYINT},
          </if>
          <if test="record.driverLicenseExpire != null">
            driver_license_expire = #{record.driverLicenseExpire,jdbcType=DATE},
          </if>
          <if test="record.inNet != null">
            in_net = #{record.inNet,jdbcType=TINYINT},
          </if>
          <if test="record.motStatus != null">
            mot_status = #{record.motStatus,jdbcType=TINYINT},
          </if>
          <if test="record.motEtcRecord != null">
            mot_etc_record = #{record.motEtcRecord,jdbcType=TINYINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ntocc_car
    set id = #{record.id,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      car_id = #{record.carId,jdbcType=VARCHAR},
      orgroot = #{record.orgroot,jdbcType=CHAR},
      orgcode = #{record.orgcode,jdbcType=VARCHAR},
      license_number = #{record.licenseNumber,jdbcType=VARCHAR},
      car_model = #{record.carModel,jdbcType=VARCHAR},
      vehicle_length = #{record.vehicleLength,jdbcType=VARCHAR},
      car_load = #{record.carLoad,jdbcType=DECIMAL},
      road_transport_certificate = #{record.roadTransportCertificate,jdbcType=VARCHAR},
      road_transport_certificate_expire = #{record.roadTransportCertificateExpire,jdbcType=DATE},
      license_plate_color = #{record.licensePlateColor,jdbcType=VARCHAR},
      car_owner = #{record.carOwner,jdbcType=VARCHAR},
      check_status = #{record.checkStatus,jdbcType=TINYINT},
      driver_license_expire = #{record.driverLicenseExpire,jdbcType=DATE},
      in_net = #{record.inNet,jdbcType=TINYINT},
      mot_status = #{record.motStatus,jdbcType=TINYINT},
      mot_etc_record = #{record.motEtcRecord,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update ntocc_car
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.gmtCreate != null">
            gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
          <if test="record.carId != null">
            car_id = #{record.carId,jdbcType=VARCHAR},
          </if>
          <if test="record.orgroot != null">
            orgroot = #{record.orgroot,jdbcType=CHAR},
          </if>
          <if test="record.orgcode != null">
            orgcode = #{record.orgcode,jdbcType=VARCHAR},
          </if>
          <if test="record.licenseNumber != null">
            license_number = #{record.licenseNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.carModel != null">
            car_model = #{record.carModel,jdbcType=VARCHAR},
          </if>
          <if test="record.vehicleLength != null">
            vehicle_length = #{record.vehicleLength,jdbcType=VARCHAR},
          </if>
          <if test="record.carLoad != null">
            car_load = #{record.carLoad,jdbcType=DECIMAL},
          </if>
          <if test="record.roadTransportCertificate != null">
            road_transport_certificate = #{record.roadTransportCertificate,jdbcType=VARCHAR},
          </if>
          <if test="record.roadTransportCertificateExpire != null">
            road_transport_certificate_expire = #{record.roadTransportCertificateExpire,jdbcType=DATE},
          </if>
          <if test="record.licensePlateColor != null">
            license_plate_color = #{record.licensePlateColor,jdbcType=VARCHAR},
          </if>
          <if test="record.carOwner != null">
            car_owner = #{record.carOwner,jdbcType=VARCHAR},
          </if>
          <if test="record.checkStatus != null">
            check_status = #{record.checkStatus,jdbcType=TINYINT},
          </if>
          <if test="record.driverLicenseExpire != null">
            driver_license_expire = #{record.driverLicenseExpire,jdbcType=DATE},
          </if>
          <if test="record.inNet != null">
            in_net = #{record.inNet,jdbcType=TINYINT},
          </if>
          <if test="record.motStatus != null">
            mot_status = #{record.motStatus,jdbcType=TINYINT},
          </if>
          <if test="record.motEtcRecord != null">
            mot_etc_record = #{record.motEtcRecord,jdbcType=TINYINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="${package}.dao.entity.NtoccCar">
    update ntocc_car
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      car_id = #{carId,jdbcType=VARCHAR},
      orgroot = #{orgroot,jdbcType=CHAR},
      orgcode = #{orgcode,jdbcType=VARCHAR},
      license_number = #{licenseNumber,jdbcType=VARCHAR},
      car_model = #{carModel,jdbcType=VARCHAR},
      vehicle_length = #{vehicleLength,jdbcType=VARCHAR},
      car_load = #{carLoad,jdbcType=DECIMAL},
      road_transport_certificate = #{roadTransportCertificate,jdbcType=VARCHAR},
      road_transport_certificate_expire = #{roadTransportCertificateExpire,jdbcType=DATE},
      license_plate_color = #{licensePlateColor,jdbcType=VARCHAR},
      car_owner = #{carOwner,jdbcType=VARCHAR},
      check_status = #{checkStatus,jdbcType=TINYINT},
      driver_license_expire = #{driverLicenseExpire,jdbcType=DATE},
      in_net = #{inNet,jdbcType=TINYINT},
      mot_status = #{motStatus,jdbcType=TINYINT},
      mot_etc_record = #{motEtcRecord,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="${package}.dao.entity.NtoccCarExample" resultMap="BaseResultMap">
    select
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ntocc_car
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    'true' as QUERYID,
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, gmt_create, gmt_modified, car_id, orgroot, orgcode, license_number, car_model, 
          vehicle_length, car_load, road_transport_certificate, road_transport_certificate_expire, 
          license_plate_color, car_owner, check_status, driver_license_expire, in_net, mot_status, 
          mot_etc_record
      </otherwise>
    </choose>
    from ntocc_car
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into ntocc_car
    (gmt_create, gmt_modified, car_id, orgroot, orgcode, license_number, car_model, vehicle_length, 
      car_load, road_transport_certificate, road_transport_certificate_expire, license_plate_color, 
      car_owner, check_status, driver_license_expire, in_net, mot_status, mot_etc_record
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.gmtCreate,jdbcType=TIMESTAMP}, #{item.gmtModified,jdbcType=TIMESTAMP}, #{item.carId,jdbcType=VARCHAR}, 
        #{item.orgroot,jdbcType=CHAR}, #{item.orgcode,jdbcType=VARCHAR}, #{item.licenseNumber,jdbcType=VARCHAR}, 
        #{item.carModel,jdbcType=VARCHAR}, #{item.vehicleLength,jdbcType=VARCHAR}, #{item.carLoad,jdbcType=DECIMAL}, 
        #{item.roadTransportCertificate,jdbcType=VARCHAR}, #{item.roadTransportCertificateExpire,jdbcType=DATE}, 
        #{item.licensePlateColor,jdbcType=VARCHAR}, #{item.carOwner,jdbcType=VARCHAR}, 
        #{item.checkStatus,jdbcType=TINYINT}, #{item.driverLicenseExpire,jdbcType=DATE}, 
        #{item.inNet,jdbcType=TINYINT}, #{item.motStatus,jdbcType=TINYINT}, #{item.motEtcRecord,jdbcType=TINYINT}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <choose>
      <when test="selective != null and selective.length > 0">
        insert into ntocc_car (
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
        )
        values
        <foreach collection="list" item="item" separator=",">
          (
          <foreach collection="selective" item="column" separator=",">
            <if test="'gmt_create'.toString() == column.value">
              #{item.gmtCreate,jdbcType=TIMESTAMP}
            </if>
            <if test="'gmt_modified'.toString() == column.value">
              #{item.gmtModified,jdbcType=TIMESTAMP}
            </if>
            <if test="'car_id'.toString() == column.value">
              #{item.carId,jdbcType=VARCHAR}
            </if>
            <if test="'orgroot'.toString() == column.value">
              #{item.orgroot,jdbcType=CHAR}
            </if>
            <if test="'orgcode'.toString() == column.value">
              #{item.orgcode,jdbcType=VARCHAR}
            </if>
            <if test="'license_number'.toString() == column.value">
              #{item.licenseNumber,jdbcType=VARCHAR}
            </if>
            <if test="'car_model'.toString() == column.value">
              #{item.carModel,jdbcType=VARCHAR}
            </if>
            <if test="'vehicle_length'.toString() == column.value">
              #{item.vehicleLength,jdbcType=VARCHAR}
            </if>
            <if test="'car_load'.toString() == column.value">
              #{item.carLoad,jdbcType=DECIMAL}
            </if>
            <if test="'road_transport_certificate'.toString() == column.value">
              #{item.roadTransportCertificate,jdbcType=VARCHAR}
            </if>
            <if test="'road_transport_certificate_expire'.toString() == column.value">
              #{item.roadTransportCertificateExpire,jdbcType=DATE}
            </if>
            <if test="'license_plate_color'.toString() == column.value">
              #{item.licensePlateColor,jdbcType=VARCHAR}
            </if>
            <if test="'car_owner'.toString() == column.value">
              #{item.carOwner,jdbcType=VARCHAR}
            </if>
            <if test="'check_status'.toString() == column.value">
              #{item.checkStatus,jdbcType=TINYINT}
            </if>
            <if test="'driver_license_expire'.toString() == column.value">
              #{item.driverLicenseExpire,jdbcType=DATE}
            </if>
            <if test="'in_net'.toString() == column.value">
              #{item.inNet,jdbcType=TINYINT}
            </if>
            <if test="'mot_status'.toString() == column.value">
              #{item.motStatus,jdbcType=TINYINT}
            </if>
            <if test="'mot_etc_record'.toString() == column.value">
              #{item.motEtcRecord,jdbcType=TINYINT}
            </if>
          </foreach>
          )
        </foreach>
      </when>
      <otherwise>
        <foreach collection="list" item="item" separator=";">
          insert into ntocc_car
          <trim>
            <trim prefix="(" suffix=")" suffixOverrides=",">
              <if test="item.gmtCreate != null">
                gmt_create,
              </if>
              <if test="item.gmtModified != null">
                gmt_modified,
              </if>
              <if test="item.carId != null">
                car_id,
              </if>
              <if test="item.orgroot != null">
                orgroot,
              </if>
              <if test="item.orgcode != null">
                orgcode,
              </if>
              <if test="item.licenseNumber != null">
                license_number,
              </if>
              <if test="item.carModel != null">
                car_model,
              </if>
              <if test="item.vehicleLength != null">
                vehicle_length,
              </if>
              <if test="item.carLoad != null">
                car_load,
              </if>
              <if test="item.roadTransportCertificate != null">
                road_transport_certificate,
              </if>
              <if test="item.roadTransportCertificateExpire != null">
                road_transport_certificate_expire,
              </if>
              <if test="item.licensePlateColor != null">
                license_plate_color,
              </if>
              <if test="item.carOwner != null">
                car_owner,
              </if>
              <if test="item.checkStatus != null">
                check_status,
              </if>
              <if test="item.driverLicenseExpire != null">
                driver_license_expire,
              </if>
              <if test="item.inNet != null">
                in_net,
              </if>
              <if test="item.motStatus != null">
                mot_status,
              </if>
              <if test="item.motEtcRecord != null">
                mot_etc_record,
              </if>
            </trim>
          </trim>
          values
          <trim>
            <trim prefix="(" suffix=")" suffixOverrides=",">
              <if test="item.gmtCreate != null">
                #{item.gmtCreate,jdbcType=TIMESTAMP},
              </if>
              <if test="item.gmtModified != null">
                #{item.gmtModified,jdbcType=TIMESTAMP},
              </if>
              <if test="item.carId != null">
                #{item.carId,jdbcType=VARCHAR},
              </if>
              <if test="item.orgroot != null">
                #{item.orgroot,jdbcType=CHAR},
              </if>
              <if test="item.orgcode != null">
                #{item.orgcode,jdbcType=VARCHAR},
              </if>
              <if test="item.licenseNumber != null">
                #{item.licenseNumber,jdbcType=VARCHAR},
              </if>
              <if test="item.carModel != null">
                #{item.carModel,jdbcType=VARCHAR},
              </if>
              <if test="item.vehicleLength != null">
                #{item.vehicleLength,jdbcType=VARCHAR},
              </if>
              <if test="item.carLoad != null">
                #{item.carLoad,jdbcType=DECIMAL},
              </if>
              <if test="item.roadTransportCertificate != null">
                #{item.roadTransportCertificate,jdbcType=VARCHAR},
              </if>
              <if test="item.roadTransportCertificateExpire != null">
                #{item.roadTransportCertificateExpire,jdbcType=DATE},
              </if>
              <if test="item.licensePlateColor != null">
                #{item.licensePlateColor,jdbcType=VARCHAR},
              </if>
              <if test="item.carOwner != null">
                #{item.carOwner,jdbcType=VARCHAR},
              </if>
              <if test="item.checkStatus != null">
                #{item.checkStatus,jdbcType=TINYINT},
              </if>
              <if test="item.driverLicenseExpire != null">
                #{item.driverLicenseExpire,jdbcType=DATE},
              </if>
              <if test="item.inNet != null">
                #{item.inNet,jdbcType=TINYINT},
              </if>
              <if test="item.motStatus != null">
                #{item.motStatus,jdbcType=TINYINT},
              </if>
              <if test="item.motEtcRecord != null">
                #{item.motEtcRecord,jdbcType=TINYINT},
              </if>
            </trim>
          </trim>
        </foreach>
      </otherwise>
    </choose>
  </insert>
  <insert id="upsertSelective" keyColumn="id" keyProperty="record.id" parameterType="map" useGeneratedKeys="true">
    insert into ntocc_car
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.gmtCreate != null">
            gmt_create,
          </if>
          <if test="record.gmtModified != null">
            gmt_modified,
          </if>
          <if test="record.carId != null">
            car_id,
          </if>
          <if test="record.orgroot != null">
            orgroot,
          </if>
          <if test="record.orgcode != null">
            orgcode,
          </if>
          <if test="record.licenseNumber != null">
            license_number,
          </if>
          <if test="record.carModel != null">
            car_model,
          </if>
          <if test="record.vehicleLength != null">
            vehicle_length,
          </if>
          <if test="record.carLoad != null">
            car_load,
          </if>
          <if test="record.roadTransportCertificate != null">
            road_transport_certificate,
          </if>
          <if test="record.roadTransportCertificateExpire != null">
            road_transport_certificate_expire,
          </if>
          <if test="record.licensePlateColor != null">
            license_plate_color,
          </if>
          <if test="record.carOwner != null">
            car_owner,
          </if>
          <if test="record.checkStatus != null">
            check_status,
          </if>
          <if test="record.driverLicenseExpire != null">
            driver_license_expire,
          </if>
          <if test="record.inNet != null">
            in_net,
          </if>
          <if test="record.motStatus != null">
            mot_status,
          </if>
          <if test="record.motEtcRecord != null">
            mot_etc_record,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.gmtCreate != null">
            #{record.gmtCreate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
          <if test="record.carId != null">
            #{record.carId,jdbcType=VARCHAR},
          </if>
          <if test="record.orgroot != null">
            #{record.orgroot,jdbcType=CHAR},
          </if>
          <if test="record.orgcode != null">
            #{record.orgcode,jdbcType=VARCHAR},
          </if>
          <if test="record.licenseNumber != null">
            #{record.licenseNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.carModel != null">
            #{record.carModel,jdbcType=VARCHAR},
          </if>
          <if test="record.vehicleLength != null">
            #{record.vehicleLength,jdbcType=VARCHAR},
          </if>
          <if test="record.carLoad != null">
            #{record.carLoad,jdbcType=DECIMAL},
          </if>
          <if test="record.roadTransportCertificate != null">
            #{record.roadTransportCertificate,jdbcType=VARCHAR},
          </if>
          <if test="record.roadTransportCertificateExpire != null">
            #{record.roadTransportCertificateExpire,jdbcType=DATE},
          </if>
          <if test="record.licensePlateColor != null">
            #{record.licensePlateColor,jdbcType=VARCHAR},
          </if>
          <if test="record.carOwner != null">
            #{record.carOwner,jdbcType=VARCHAR},
          </if>
          <if test="record.checkStatus != null">
            #{record.checkStatus,jdbcType=TINYINT},
          </if>
          <if test="record.driverLicenseExpire != null">
            #{record.driverLicenseExpire,jdbcType=DATE},
          </if>
          <if test="record.inNet != null">
            #{record.inNet,jdbcType=TINYINT},
          </if>
          <if test="record.motStatus != null">
            #{record.motStatus,jdbcType=TINYINT},
          </if>
          <if test="record.motEtcRecord != null">
            #{record.motEtcRecord,jdbcType=TINYINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    on duplicate key update 
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.gmtCreate != null">
            gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
          </if>
          <if test="record.gmtModified != null">
            gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
          </if>
          <if test="record.carId != null">
            car_id = #{record.carId,jdbcType=VARCHAR},
          </if>
          <if test="record.orgroot != null">
            orgroot = #{record.orgroot,jdbcType=CHAR},
          </if>
          <if test="record.orgcode != null">
            orgcode = #{record.orgcode,jdbcType=VARCHAR},
          </if>
          <if test="record.licenseNumber != null">
            license_number = #{record.licenseNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.carModel != null">
            car_model = #{record.carModel,jdbcType=VARCHAR},
          </if>
          <if test="record.vehicleLength != null">
            vehicle_length = #{record.vehicleLength,jdbcType=VARCHAR},
          </if>
          <if test="record.carLoad != null">
            car_load = #{record.carLoad,jdbcType=DECIMAL},
          </if>
          <if test="record.roadTransportCertificate != null">
            road_transport_certificate = #{record.roadTransportCertificate,jdbcType=VARCHAR},
          </if>
          <if test="record.roadTransportCertificateExpire != null">
            road_transport_certificate_expire = #{record.roadTransportCertificateExpire,jdbcType=DATE},
          </if>
          <if test="record.licensePlateColor != null">
            license_plate_color = #{record.licensePlateColor,jdbcType=VARCHAR},
          </if>
          <if test="record.carOwner != null">
            car_owner = #{record.carOwner,jdbcType=VARCHAR},
          </if>
          <if test="record.checkStatus != null">
            check_status = #{record.checkStatus,jdbcType=TINYINT},
          </if>
          <if test="record.driverLicenseExpire != null">
            driver_license_expire = #{record.driverLicenseExpire,jdbcType=DATE},
          </if>
          <if test="record.inNet != null">
            in_net = #{record.inNet,jdbcType=TINYINT},
          </if>
          <if test="record.motStatus != null">
            mot_status = #{record.motStatus,jdbcType=TINYINT},
          </if>
          <if test="record.motEtcRecord != null">
            mot_etc_record = #{record.motEtcRecord,jdbcType=TINYINT},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <insert id="upsert" keyColumn="id" keyProperty="id" parameterType="${package}.dao.entity.NtoccCar" useGeneratedKeys="true">
    insert into ntocc_car
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      gmt_create,
      gmt_modified,
      car_id,
      orgroot,
      orgcode,
      license_number,
      car_model,
      vehicle_length,
      car_load,
      road_transport_certificate,
      road_transport_certificate_expire,
      license_plate_color,
      car_owner,
      check_status,
      driver_license_expire,
      in_net,
      mot_status,
      mot_etc_record,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      #{gmtCreate,jdbcType=TIMESTAMP},
      #{gmtModified,jdbcType=TIMESTAMP},
      #{carId,jdbcType=VARCHAR},
      #{orgroot,jdbcType=CHAR},
      #{orgcode,jdbcType=VARCHAR},
      #{licenseNumber,jdbcType=VARCHAR},
      #{carModel,jdbcType=VARCHAR},
      #{vehicleLength,jdbcType=VARCHAR},
      #{carLoad,jdbcType=DECIMAL},
      #{roadTransportCertificate,jdbcType=VARCHAR},
      #{roadTransportCertificateExpire,jdbcType=DATE},
      #{licensePlateColor,jdbcType=VARCHAR},
      #{carOwner,jdbcType=VARCHAR},
      #{checkStatus,jdbcType=TINYINT},
      #{driverLicenseExpire,jdbcType=DATE},
      #{inNet,jdbcType=TINYINT},
      #{motStatus,jdbcType=TINYINT},
      #{motEtcRecord,jdbcType=TINYINT},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      car_id = #{carId,jdbcType=VARCHAR},
      orgroot = #{orgroot,jdbcType=CHAR},
      orgcode = #{orgcode,jdbcType=VARCHAR},
      license_number = #{licenseNumber,jdbcType=VARCHAR},
      car_model = #{carModel,jdbcType=VARCHAR},
      vehicle_length = #{vehicleLength,jdbcType=VARCHAR},
      car_load = #{carLoad,jdbcType=DECIMAL},
      road_transport_certificate = #{roadTransportCertificate,jdbcType=VARCHAR},
      road_transport_certificate_expire = #{roadTransportCertificateExpire,jdbcType=DATE},
      license_plate_color = #{licensePlateColor,jdbcType=VARCHAR},
      car_owner = #{carOwner,jdbcType=VARCHAR},
      check_status = #{checkStatus,jdbcType=TINYINT},
      driver_license_expire = #{driverLicenseExpire,jdbcType=DATE},
      in_net = #{inNet,jdbcType=TINYINT},
      mot_status = #{motStatus,jdbcType=TINYINT},
      mot_etc_record = #{motEtcRecord,jdbcType=TINYINT},
    </trim>
  </insert>
</mapper>